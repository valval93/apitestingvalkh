{
	"info": {
		"_postman_id": "c9a5a7e0-7f61-458c-b02a-0b0ab51983fd",
		"name": "List Workflow Test Cases",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44548906",
		"_collection_link": "https://val-3863461.postman.co/workspace/Val's-Workspace~568476ce-2985-4858-8a11-b6fb8b80817b/collection/44548906-c9a5a7e0-7f61-458c-b02a-0b0ab51983fd?action=share&source=collection_link&creator=44548906"
	},
	"item": [
		{
			"name": "Create Test List Happy Flow",
			"item": [
				{
					"name": "Create List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Function for getitng the id of the created list for further usage during the ongoing test folder.\r",
									"\r",
									"pm.test(\"Obtain_List_ID_and_save_it_in_env_variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    console.log (\"The following test list is created\");\r",
									"    console.log(jsonData);\r",
									"    console.log(\"The end of the created list JSON data\");\r",
									"\r",
									"    var list_id = jsonData.id;\r",
									"\r",
									"    pm.environment.set(\"list_env_id\", list_id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "name",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"TestList {{$randomCity}}\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/folder/90156748364/list",
							"host": [
								"{{url}}"
							],
							"path": [
								"folder",
								"90156748364",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get List Information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Obtain_The_Info_About_Created_List\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    console.log (\"The information about the created Test List\");\r",
									"    console.log(jsonData);\r",
									"    console.log(\"The end of the information about the created Test List\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/list/{{list_env_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"list",
								"{{list_env_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete List",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/list/{{list_env_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"list",
								"{{list_env_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Test List Invalid Token",
			"item": [
				{
					"name": "Create List Invalid Token",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{invalid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "name",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"TestList1\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/folder/90156748364/list",
							"host": [
								"{{url}}"
							],
							"path": [
								"folder",
								"90156748364",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Info from the List Invalid Token",
			"item": [
				{
					"name": "Create List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Function for getitng the id of the created list for further usage during the ongoing test folder.\r",
									"\r",
									"pm.test(\"Obtain_List_ID_and_save_it_in_env_variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"\r",
									"    var list_id = jsonData.id;\r",
									"\r",
									"    pm.environment.set(\"list_env_id\", list_id);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "name",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"TestList00\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/folder/90156748364/list",
							"host": [
								"{{url}}"
							],
							"path": [
								"folder",
								"90156748364",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get List Information Invalid Token",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{invalid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.clickup.com/api/v2/list/{{list_env_id}}",
							"protocol": "https",
							"host": [
								"api",
								"clickup",
								"com"
							],
							"path": [
								"api",
								"v2",
								"list",
								"{{list_env_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete List",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/list/{{list_env_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"list",
								"{{list_env_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CRUD For The List Happy Flow",
			"item": [
				{
					"name": "Create List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Function for getitng the id of the created list for further usage during the ongoing test folder.\r",
									"\r",
									"pm.test(\"Obtain_List_ID_and_save_it_in_env_variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    console.log (\"The following test list is created\");\r",
									"    console.log(jsonData);\r",
									"    console.log(\"The end of the created list JSON data\");\r",
									"\r",
									"    var list_id = jsonData.id;\r",
									"\r",
									"    pm.environment.set(\"list_env_id\", list_id);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"TestList {{$randomAbbreviation}}\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/folder/90156748364/list",
							"host": [
								"{{url}}"
							],
							"path": [
								"folder",
								"90156748364",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get List Information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Obtain_The_Info_About_Created_List\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    console.log (\"The information about the created Test List\");\r",
									"    console.log(jsonData);\r",
									"    console.log(\"The end of the information about the created Test List\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/list/{{list_env_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"list",
								"{{list_env_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update List Name",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"updated {{$randomAdjective}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/list/{{list_env_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"list",
								"{{list_env_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete List",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/list/{{list_env_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"list",
								"{{list_env_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete the List by its ID",
			"item": [
				{
					"name": "Delete the List by its ID",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/list/901510801900",
							"host": [
								"{{url}}"
							],
							"path": [
								"list",
								"901510801900"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Random Name List",
			"item": [
				{
					"name": "Create List Random Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Function for getitng the id of the created list for further usage during the ongoing test folder.\r",
									"\r",
									"pm.test(\"Obtain_List_ID_and_save_it_in_env_variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    console.log (\"The following test list is created\");\r",
									"    console.log(jsonData);\r",
									"    console.log(\"The end of the created list JSON data\");\r",
									"\r",
									"    var list_id = jsonData.id;\r",
									"\r",
									"    pm.environment.set(\"list_env_id\", list_id);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "name",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"TestList {{$randomCity}}\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/folder/90156748364/list",
							"host": [
								"{{url}}"
							],
							"path": [
								"folder",
								"90156748364",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Information about Lists",
			"item": [
				{
					"name": "Create Folder for Lists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Function for getitng the id of the created list for further usage during the ongoing test folder.\r",
									"\r",
									"pm.test(\"Obtain_List_ID_and_save_it_in_env_variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    console.log (\"The following test folder is created\");\r",
									"    console.log(jsonData);\r",
									"    console.log(\"The end of the created folder JSON data\");\r",
									"\r",
									"    var folder_id = jsonData.id;\r",
									"\r",
									"    pm.environment.set(\"folder_env_id\", folder_id);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "name",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"TestFolder {{$randomCity}}\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/space/90154402045/folder",
							"host": [
								"{{url}}"
							],
							"path": [
								"space",
								"90154402045",
								"folder"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create List for Get Lists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Function for getitng the id of the created list for further usage during the ongoing test folder.\r",
									"\r",
									"pm.test(\"Obtain_List_ID_and_save_it_in_env_variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    console.log (\"The following test list is created\");\r",
									"    console.log(jsonData);\r",
									"    console.log(\"The end of the created list JSON data\");\r",
									"\r",
									"    var list_id = jsonData.id;\r",
									"\r",
									"    pm.environment.set(\"list_env_id\", list_id);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "name",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"TestList {{$randomCity}}\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/folder/{{folder_env_id}}/list",
							"host": [
								"{{url}}"
							],
							"path": [
								"folder",
								"{{folder_env_id}}",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Information about Lists",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Delete Folder",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{valid_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/folder/{{folder_env_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"folder",
								"{{folder_env_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}